#
#
# DCC Portal Server - OHSU Development Configuration
#

###############################################################################
# Profile - "production"
###############################################################################

spring.profiles: ohsu-dev

# API
server:
  port: 8000
#  ssl:
#    enabled: true
#    keyStore: "/opt/server/dcc-portal/certs/keystore.p12"
#    keyStorePassword: "yx78226"

# Datasource
spring.datasource:
  driver-class-name: org.h2.Driver
  url: jdbc:h2:mem:portal;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;INIT=runscript from 'classpath:sql/schema.sql'
  username:
  password:
  max-active: 10
  max-idle: 1
  min-idle: 1

# Authorization
crowd:
  ssoUrl: "https://ssoUrl?continue="
  ssoUrlGoogle: "https://ssoUrlGoogle?continue="

# ICGC auth server conig
oauth:
  serviceUrl: "http://localhost:8443"
  clientId: "mgmt"
  clientSecret: "pass"
  enableStrictSSL: false
  enableHttpLogging: true

# Authorization
auth:
  enabled: false

hazelcast:
  # Enable session replication?
  enabled: false

  # NB: Below hazelcast settings do not have default values. The portal won't start if they're unset

  # Credentials to enter a group. E.g. dev, uat, prog groups
  groupName: ""
  groupPassword: ""

  # Time-to-live settings
  # Maximum number of seconds for each entry to stay in the cache. Entries that are
  # older than the set value and not updated for that time
  # will get automatically evicted from the cache.

  # Expire inactive users in 15 minutes
  usersCacheTTL: 900

  # Expire openTd authentication attempt in 2 minutes
  openidAuthTTL: 120

  # Enable multicast? If false then hosts must be provided. hosts not used otherwise
  # Multicast must be disabled in an OpenStack /  AWS environment
  multicast: false
  hosts:
    - 127.0.0.1

# ElasticSearch index and hosts
elastic:
  indexName: icgc-release
  repoIndexName: icgc-repository
  nodeAddresses:
    - host: "10.60.60.48"
      port: 9300

  # List of TransportClient settings.
  # E.g.
  # "client.transport.sniff": true
  client:
    "client.transport.sniff": true

# Mail
mail:
  enabled: false
  recipientEmail:

web:
  # Defines an external URL when the portal is behind a reverse proxy / load balancer. E.g. shortUrl resource uses it for generation of valid URLs
  baseUrl: "http://localhost:8080"


# ICGC Client configuration
icgc:

  # CGP/DACO API endpoint
  cgpUrl: "http://localhost"

  # ShortUrl API endpoint
  shortUrl: "http://localhost"

  # CUD API endpoint
  cudUrl: "http://localhost"

  # CMS API endpoint
  cmsUrl: "http://localhost"

  # CUD credentials. Obtained from webdev@oicr.on.ca
  cudAppId: "<fill in>"
  cudUser: "<fill in>"
  cudPassword: "<fill in>"

  #OAuth credentials
  # To generate the credentials go to icgc.org, log inm go to the "OAuth Settings" tab and request "Regenerate all tokens"
  consumerKey: "<fill in>"
  consumerSecret: "<fill in>"
  accessToken: "<fill in>"
  accessSecret: "<fill in>"

  # Log HTTP requests to the API
  enableHttpLogging: false

  # Disallow self-signed SSL certificates
  enableStrictSSL: false

# Portal release configuration
release:
  releaseDate: "Month Day, Year"
  dataVersion: 2
